@startuml
skinparam monochrome true
skinparam shadowing false
skinparam defaultFontName "Architects daughter"


autonumber "<b>[000]"

actor "Requestor" as Requestor

box "OEM" #LightGrey
    participant IRS as IRS
    participant SubmodelServer as SubmodelServer
    participant dDTR as dDTR
    participant EDC as EDC #99FF99
end box

participant EDC as EDCTier1

box "Tier 1"
     participant IRS as IRSTier1
     participant SubmodelServer as SubmodelServerTier1
     participant ESSSubmodelServer as ESSSubmodelServerTier1
     participant dDTR as dDTRTier1
     participant EDC as EDCConsumerTier1 #99FF99
end box

participant EDC as EDCTier2

box "Tier 2"
     participant IRS as IRSTier2
     participant SubmodelServer as SubmodelServerTier2
     participant ESSSubmodelServer as ESSSubmodelServerTier2
     participant dDTR as dDTRTier2
     participant EDC as EDCConsumerTier2 #99FF99
end box

box SharedServices
    participant DiscoveryFinder as DiscoveryFinder
    participant EDCDiscoveryService as EDCDiscoveryService
end box


Requestor -> IRS : POST /ess/bpn/investigations
note left
    {
      "bomLifecycle": "asPlanned",
      "callbackUrl": "https://hostname.com/callback?jobId={jobId}&jobState={jobState}",
      "incidentBpns": [
        "string"
      ],
      "key": {
        "bpn": "BPNL0123456789XX",
        "globalAssetId": "urn:uuid:6c311d29-5753-46d4-b32c-19b918ea93b0"
      }
    }
end note
IRS -> IRS : register an IRS ess incident job

ref over IRS, DiscoveryFinder, EDCDiscoveryService, EDC, dDTR
    lookup/shells for given globalAssetId
    :return AAS for globalAssetId
end
IRS -> SubmodelServer : GET SingleLevelUsageAsPlanned
IRS <-- SubmodelServer : Receiver SingleLevelBomAsPlanned
IRS --> IRS : Extract childCXIds from SingleLevelBomAsPlanned

loop  childCXIds

    ref over IRS, DiscoveryFinder, EDCDiscoveryService
        get EDC endpoint for Tier1
    end
    ref over IRS, EDCTier1, dDTRTier1
        lookup/shells for given globalAssetId
        :return AAS for globalAssetId
    end
    IRS -> SubmodelServer : Get PartAsPlanned
    IRS <-- SubmodelServer : Receive PartAsPlanned
    IRS -> IRS: Validity Check on PartAsPlanned validityPeriod

    opt validFrom >=  Timstamp.UTC.now <= validTo
        IRS -> SubmodelServer : GET PartSiteInformationAsPlanned
        IRS -> IRS : Extract 


    else -
        IRS -> IRS: continue  loop
    end




end loop





@enduml