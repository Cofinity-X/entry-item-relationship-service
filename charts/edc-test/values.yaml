test-edc:
  controlplane:
    ingresses:
      - enabled: false

    endpoints:
      # -- default api for health checks, should not be added to any ingress
      default:
        port: 8080
        path: /api
      # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
      management:
        port: 8081
        path: /management
        # -- authentication key, must be attached to each 'X-Api-Key' request header
        authKey: ""
      # -- control api, used for internal control calls. can be added to the internal ingress, but should probably not
      control:
        port: 8083
        path: /control
      # -- ids api, used for inter connector communication and must be internet facing
      protocol:
        port: 8084
        path: /api/v1/ids
      # -- metrics api, used for application metrics, must not be internet facing
      metrics:
        port: 9090
        path: /metrics
      # -- observability api with unsecured access, must not be internet facing
      observability:
        port: 8085
        # -- observability api, provides /health /readiness and /liveness endpoints
        path: /observability
        # -- allow or disallow insecure access, i.e. access without authentication
        insecure: true

    internationalDataSpaces:
      id: TXDC
      description: Tractus-X Eclipse IDS Data Space Connector
      title: ""
      maintainer: ""
      curator: ""
      catalogId: TXDC-Catalog

    # Explicitly declared url for reaching the ids api (e.g. if ingresses not used)
    url:
      ids: ""

    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 512Mi

  dataplane:
    ingresses:
      - enabled: false

    endpoints:
      default:
        port: 8080
        path: /api
      public:
        port: 8081
        path: /api/public
      control:
        port: 8083
        path: /api/dataplane/control
      observability:
        port: 8085
        path: /observability
        insecure: true
      metrics:
        port: 9090
        path: /metrics

    # Explicitly declared url for reaching the public api (e.g. if ingresses not used)
    url:
      public: ""

    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi


  postgresql:
    enabled: true
    jdbcUrl: ""
    username: ""
    password: ""

  vault:
    hashicorp:
      url: ""
      token: ""
      timeout: 30
      healthCheck:
        enabled: true
        standbyOk: true
      paths:
        secret: /v1/
        health: /v1/sys/health
    secretNames:
      transferProxyTokenSignerPrivateKey:
      transferProxyTokenSignerPublicKey:
      transferProxyTokenEncryptionAesKey:
      dapsPrivateKey:
      dapsPublicKey:

  daps:
    url: ""
    clientId: ""
    paths:
      jwks: /.well-known/jwks.json
      token: /token

  backendService:
    httpProxyTokenReceiverUrl: ""


test-edc-postgresql:
  auth:
    username:
    database:
    postgresPassword:
    password:
  primary:
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 256Mi
