# Copyright (c) 2022,2024
#       2022: ZF Friedrichshafen AG
#       2022: ISTOS GmbH
#       2022,2024: Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#       2022,2023: BOSCH AG
# Copyright (c) 2021,2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0. *
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "irs.fullname" . }}-configmap
  namespace: {{ .Values.namespace }}
data:
  application.yaml: |-
    # Config overriding Spring Boot configuration
    {{- if not .Values.config.override }}
    server:
      trustedPort: {{ .Values.service.trustedPort }}

    irs:
      job:
        batch:
          threadCount: {{ .Values.job.batch.threadCount }}
        scheduled:
          threadCount: {{ .Values.job.scheduled.threadCount }}
        cached:
          threadCount: {{ .Values.job.cached.threadCount }}
        jobstore:
          ttl:
            failed: {{ .Values.job.ttl.failed | default "PT24H"  | quote }}
            completed: {{ .Values.job.ttl.completed | default "PT24H" | quote  }}
      apiUrl: {{ tpl (.Values.irsUrl | default "http://localhost") . | quote }}
      security:
        api:
          keys:
            admin: {{ tpl (.Values.apiKeyAdmin | default "") . | quote }}
            regular: {{ tpl (.Values.apiKeyRegular | default "") . | quote }}

    blobstore:
      persistence:
        storeType: {{ .Values.blobstore.persistence.storeType | default "MINIO" | quote }}
        {{- if .Values.blobstore.persistence.minio }}
        minio:
          endpoint: {{ tpl .Values.blobstore.persistence.minio.endpoint . | quote }}
          accessKey: {{ .Values.blobstore.persistence.minio.accessKey | default "minio" | quote }}
          secretKey: {{ .Values.blobstore.persistence.minio.secretKey | default "minioPass" | quote }}
        {{- end }}
        {{- if .Values.blobstore.persistence.azure }}
        azure:
          baseUrl: {{ .Values.blobstore.persistence.azure.baseUrl | quote }}
          clientId: {{ .Values.blobstore.persistence.azure.clientId | quote }}
          clientSecret: {{ .Values.blobstore.persistence.azure.clientSecret | quote }}
          tenantId: {{ .Values.blobstore.persistence.azure.tenantId | quote }}
          useConnectionString: false
        {{- end }}
      jobs:
        containerName: {{ ((.Values.blobstore).jobs).containerName | default "irs-jobs" | quote }}
        daysToLive: {{ ((.Values.blobstore).jobs).daysToLine | default 7 | quote }}
      policies:
        containerName: {{ ((.Values.blobstore).policies).containerName | default "irs-policy" | quote }}
        daysToLive: {{ ((.Values.blobstore).policies).daysToLine | default -1 | quote }}

    spring:
      security:
        oauth2:
          client:
            registration:
              semantics:
                authorization-grant-type: client_credentials
                client-id: "${SEMANTICS_OAUTH2_CLIENT_ID}" # taken from secret ENV
                client-secret: "${SEMANTICS_OAUTH2_CLIENT_SECRET}" # taken from secret ENV
              discovery:
                authorization-grant-type: client_credentials
                client-id: ${DISCOVERY_OAUTH2_CLIENT_ID} # taken from secret ENV
                client-secret: ${DISCOVERY_OAUTH2_CLIENT_SECRET} # taken from secret ENV
            provider:
              semantics:
                token-uri: {{ tpl (.Values.oauth2.clientTokenUri | default "http://localhost") . | quote }}
              discovery:
                token-uri: {{ tpl (.Values.oauth2.clientTokenUri | default "http://localhost") . | quote }}
      {{- if .Values.redisConfig.enabled }}
      redis:
        host: {{ .Values.redisConfig.host }}
        port: {{ .Values.redisConfig.port }}
        password: ${REDIS_PASSWORD} # Use value from secret
      {{- end }}
      cache:
        type: simple # Use in-memory cache for @Cacheable

    digitalTwinRegistry:
      descriptorEndpoint: {{ tpl (.Values.digitalTwinRegistry.descriptorEndpoint | default "") . | quote }}
      shellLookupEndpoint: {{ tpl (.Values.digitalTwinRegistry.shellLookupEndpoint | default "") . | quote }}
      shellDescriptorTemplate: {{ .Values.digitalTwinRegistry.shellDescriptorTemplate | default "" | quote }}
      lookupShellsTemplate: {{ .Values.digitalTwinRegistry.lookupShellsTemplate | default "" | quote }}
      type: {{ tpl (.Values.digitalTwinRegistry.type | default "") . | quote }}
      oAuthClientId: {{ .Values.digitalTwinRegistry.oAuthClientId | default "discovery" }}
      discovery:
        oAuthClientId: {{ .Values.discovery.oAuthClientId | default "discovery" }} # ID of the OAuth2 client registration to use, see config spring.security.oauth2.client
        discoveryFinderUrl: {{ tpl (.Values.discovery.discoveryFinderUrl | default "") . | quote }} # The endpoint to discover EDC endpoints to a particular BPN.
        type: {{ .Values.discovery.type | default "bpnl" }} # Type to discover EDC of type "bpnl".

    semanticshub:
      url: {{ tpl (.Values.semanticshub.url | default "") . | quote }}
      pageSize: {{ tpl (.Values.semanticshub.pageSize | default "100") . }}
      modelJsonSchemaEndpoint: {{ tpl (.Values.semanticshub.modelJsonSchemaEndpoint | default "") . | quote }}
      defaultUrns: {{ tpl (.Values.semanticshub.defaultUrns | default "") . | quote }}
      oAuthClientId: {{ .Values.semanticshub.oAuthClientId | default "semantics" }}
      {{- if .Values.semanticshub.localModels }}
      localModelDirectory: /app/semantic-models
      {{- end }}

    irs-edc-client:
      callback:
        mapping: {{ .Values.edc.callbackMapping | default "/internal/endpoint-data-reference" | quote }}
        negotiation-mapping: {{ .Values.edc.negotiationCallbackMapping | default "/internal/negotiation-callback" | quote }}
      callback-url: {{ tpl (.Values.edc.callbackurl | default (printf "http://%s%s" .Release.Name "-item-relationship-service:8181/internal/endpoint-data-reference")) . | quote }}
      negotiation-callback-url: {{ tpl (.Values.edc.negotiationCallbackurl | default (printf "http://%s%s" .Release.Name "-item-relationship-service:8181/internal/negotiation-callback")) . | quote }}
      asyncTimeout: {{ tpl .Values.edc.asyncTimeout . | default "PT10M" | quote }}
      controlplane:
        request-ttl: {{ .Values.edc.controlplane.request.ttl | default "PT10M" | quote }}
        endpoint:
          data: {{ tpl (.Values.edc.controlplane.endpoint.data | default (printf "http://%s%s" .Release.Name "-tractusx-connector-controlplane:8081/management")) . | quote }}
          catalog: {{ .Values.edc.controlplane.endpoint.catalog | default "/v3/catalog/request" | quote }}
          edr-management: {{ .Values.edc.controlplane.endpoint.edrManagement | default "/v2/edrs" | quote }}
          contract-negotiation: {{ .Values.edc.controlplane.endpoint.contractnegotiation | default "/v3/contractnegotiations" | quote }}
          transfer-process: {{ .Values.edc.controlplane.endpoint.transferprocess | default "/v3/transferprocesses" | quote }}
          state-suffix: {{ .Values.edc.controlplane.endpoint.statesuffix | default "/state" | quote }}
          contract-agreements: {{ .Values.edc.controlplane.endpoint.contractAgreements | default "/v3/contractagreements" | quote }}
        provider-suffix: {{ tpl .Values.edc.controlplane.provider.suffix . | quote }}
        catalog-limit: {{ .Values.edc.controlplane.catalog.limit }}
        catalog-page-size: {{ .Values.edc.controlplane.catalog.pagesize }}
        edr-management-enabled: {{ .Values.edc.controlplane.edrManagementEnabled | quote }}
        api-key:
          header: {{ tpl (.Values.edc.controlplane.apikey.header | default "") . | quote }}
          secret: ${EDC_API_KEY_SECRET:} # taken from secret ENV
        datareference:
          storage:
            useRedis: {{ .Values.edc.controlplane.datareference.storage.useRedis }}

      submodel:
        request-ttl: {{ tpl .Values.edc.submodel.request.ttl . | default "PT10M" | quote }}
        urn-prefix: {{ tpl (.Values.edc.submodel.urnprefix | default "/urn") . | quote }}
        submodel-suffix: {{ tpl (.Values.edc.submodel.suffix) . | quote }}

      catalog:
        acceptedPolicies: {{ .Values.edc.catalog.acceptedPolicies | trim | b64enc | quote }}
      discoveryFinderClient:
        cacheTTL: {{ .Values.edc.discoveryFinderClient.cacheTTL | quote }}
      connectorEndpointService:
        cacheTTL: {{ .Values.edc.connectorEndpointService.cacheTTL | quote }}
      orchestration:
        thread-pool-size: {{ .Values.edc.orchestration.threadPoolSize | quote }}
    ess:
      localBpn: {{ tpl (.Values.bpn | default "") . | quote }}
      localEdcEndpoint: {{ tpl (.Values.ess.edc.host | default "") . | quote }}
      assetsPath: {{ tpl (.Values.ess.assetsPath | default "/management/v3/assets") . | quote }}
      policydefinitionsPath: {{ tpl (.Values.ess.policydefinitionsPath | default "/management/v3/policydefinitions") . | quote }}
      contractdefinitionsPath: {{ tpl (.Values.ess.contractdefinitionsPath | default "/management/v3/contractdefinitions") . | quote }}
      irs:
        url: {{ tpl (.Values.irsUrl | default "") . | quote }}
      discovery:
        oAuthClientId: {{ .Values.discovery.oAuthClientId | default "discovery" }}
        {{- if .Values.ess.mockEdcResult }}
        mockEdcResult:
        {{- tpl (toYaml .Values.ess.mockEdcResult) . | nindent 10 }}
        {{- end }}
        {{- if .Values.ess.mockRecursiveEdcAsset }}
        mockRecursiveEdcAsset: {{ tpl (.Values.ess.mockRecursiveEdcAsset) . | quote }}
        {{- end }}
    {{- if .Values.management.health.dependencies.enabled }}
    management:
      health:
        dependencies:
          enabled: {{ .Values.management.health.dependencies.enabled | default false }}
          urls:
            {{- tpl (toYaml .Values.management.health.dependencies.urls) . | nindent 12 }}
    {{- end }}
    {{- end }}

    {{- if .Values.config.content }}
    {{- tpl (toYaml .Values.config.content) . | nindent 4 }}
    {{- end }}
